import os
from jinja2 import Template
from ..state_schema import State


HTML_TMPL = """
<!doctype html>
<html lang="ko">
<head>
  <meta charset="utf-8" />
  <title>{{ company }} × {{ country }} Market Entry</title>
  <style>
    :root { --bg:#0f172a; --fg:#0b1220; --card:#ffffff; --muted:#64748b; --accent:#2563eb; }
    body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI','Noto Sans KR','Malgun Gothic',sans-serif;margin:0;background:#f8fafc;color:#0f172a}
    .wrap{max-width:980px;margin:24px auto;padding:0 16px}
    .header{background:linear-gradient(135deg,#1e293b 0%,#334155 100%);color:#fff;padding:20px 24px;border-radius:12px}
    .grid{display:grid;grid-template-columns:1fr 1fr;gap:16px}
    .card{background:var(--card);border-radius:12px;box-shadow:0 2px 8px rgba(0,0,0,0.06);padding:16px}
    h1{margin:0;font-size:22px}
    h2{margin:8px 0 12px 0;font-size:18px}
    .meta{color:#cbd5e1;margin-top:6px;font-size:13px}
    .badge{display:inline-block;padding:2px 8px;border-radius:999px;font-size:12px;margin-left:6px;background:#e2e8f0}
    .badge.high{background:#fee2e2;color:#991b1b}
    .badge.mid{background:#fef3c7;color:#92400e}
    .badge.low{background:#dcfce7;color:#14532d}
    table{border-collapse:collapse;width:100%}
    th,td{border:1px solid #e5e7eb;padding:6px 8px;font-size:13px}
    th{background:#f1f5f9;text-align:left}
    img{max-width:100%;border-radius:8px;border:1px solid #e5e7eb}
    ul{margin:8px 0 0 18px}
  </style>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  </head>
<body>
  <div class="wrap">
    <div class="header">
      <h1>{{ company }} × {{ country }} Market Entry</h1>
      <div class="meta">Decision: <strong>{{ decision.status if decision else '' }}</strong> ({{ (decision.reason if decision else '') }})
        <span class="badge {% if risk_badge=='High' %}high{% elif risk_badge=='Medium' %}mid{% else %}low{% endif %}">Risk {{ risk_badge or 'N/A' }}</span>
        <span class="badge">Coverage {{ cov_pct }}%</span>
        <span class="badge">TBD {{ tbd_pct }}%</span>
      </div>
    </div>

    <div class="grid" style="margin-top:16px">
      <div class="card">
        <h2>Market</h2>
        <div>Why Now: {{ why_now }}</div>
        <ul>
          {% for k,v in metrics.items() %}<li>{{k}}: {{v}}</li>{% endfor %}
        </ul>
        {% if market_png %}<img src="{{ market_png }}" alt="market" />{% endif %}
      </div>
      <div class="card">
        <h2>Regulation</h2>
        <div>Blocker: {{ 'Yes' if blocker else 'No' }}</div>
        {% if customs_png %}<img src="{{ customs_png }}" alt="customs" />{% endif %}
      </div>
    </div>

    <div class="card" style="margin-top:16px">
      <h2>Competition</h2>
      <ul>{% for w in whitespaces %}<li>{{ w }}</li>{% endfor %}</ul>
      {% if heatmap %}<img src="{{ heatmap }}" alt="heatmap" />{% endif %}
      {% if markers_map %}<img src="{{ markers_map }}" alt="markers" />{% endif %}
    </div>

    <div class="card" style="margin-top:16px">
      <h2>GTM</h2>
      <div>Selected: <strong>{{ gtm_selected }}</strong></div>
      <table style="margin-top:8px">
        <thead><tr><th>Segment</th><th style="text-align:right">Score</th><th>ICP</th><th>Offer</th></tr></thead>
        <tbody>
        {% for row in gtm_table %}
          <tr><td>{{row.segment}}</td><td style="text-align:right">{{ '%.1f'|format(row.score) }}</td><td>{{row.icp}}</td><td>{{row.offer}}</td></tr>
        {% endfor %}
        </tbody>
      </table>
    </div>

    <div class="grid" style="margin-top:16px">
      <div class="card">
        <h2>Partners</h2>
        <ul>{% for p in partners %}<li>{{p.name}} ({{p.role}}) · priority={{p.priority}}</li>{% endfor %}</ul>
        {% if partner_map %}<img src="{{ partner_map }}" alt="partner map" />{% endif %}
      </div>
      <div class="card">
        <h2>Risks</h2>
        <ul>{% for r in risks %}<li>{{r.risk}} · prob={{r.prob}} · impact={{r.impact}} · mitigation={{r.mitigation}} (trigger: {{r.trigger}})</li>{% endfor %}</ul>
      </div>
    </div>

    <div class="card" style="margin-top:16px">
      <h2>Decision Scorecard</h2>
      <table>
        <tbody>
          <tr><td>base</td><td>{{scorecard.base}}</td></tr>
          <tr><td>coverage</td><td>{{scorecard.cov}}</td></tr>
          <tr><td>tbd_ratio</td><td>{{scorecard.tbd_ratio}}</td></tr>
          <tr><td>competition_high</td><td>{{scorecard.competition_high}}</td></tr>
          <tr><td>partners</td><td>{{scorecard.partners}}</td></tr>
          <tr><td><strong>final</strong></td><td><strong>{{scorecard.final}}</strong></td></tr>
        </tbody>
      </table>
    </div>

    <div style="color:#94a3b8;font-size:12px;margin:20px 0">Generated by agentic-market-entry</div>
  </div>
  </body>
  </html>
"""


def run(state: State, ctx):
    company, country, out_dir = ctx["company"]["name"], ctx["country"], ctx["out_dir"]
    out = os.path.join(out_dir, f"{company}_{country}")
    os.makedirs(out, exist_ok=True)

    def bn(p):
        return os.path.basename(p) if p else None

    html = Template(HTML_TMPL).render(
        company=company,
        country=country,
        decision=state.decision,
        cov_pct=round((state.reg_compliance.coverage if state.reg_compliance else 0) * 100),
        tbd_pct=round((state.reg_compliance.tbd_ratio if state.reg_compliance else 0) * 100),
        risk_badge=(state.reg_compliance.risk_badge if state.reg_compliance else ''),
        gtm_selected=(state.gtm_merged.selected if state.gtm_merged else 'high'),
        why_now=(state.market_summary.why_now if state.market_summary else ''),
        metrics=(state.market_summary.metrics if state.market_summary else {}),
        blocker=(state.reg_compliance.blocker if state.reg_compliance else False),
        customs_png=bn(state.reg_compliance.customs_flow_png if state.reg_compliance else None),
        market_png=bn(state.market_summary.market_summary_png if state.market_summary else None),
        whitespaces=(state.competition.whitespaces if state.competition else []),
        heatmap=bn(state.competition.heatmap_png if state.competition else None),
        markers_map=bn(getattr(state.competition, 'markers_map_png', None) if state.competition else None),
        gtm_table=(state.gtm_merged.table if state.gtm_merged else []),
        partners=(state.partners.candidates if state.partners else []),
        partner_map=bn(state.partners.partner_map_png if state.partners else None),
        risks=(state.risks.register_items if state.risks else []),
        scorecard=(state.decision.scorecard if state.decision else {}),
    )

    path = os.path.join(out, f"strategy_card_{company}_{country}.html")
    with open(path, 'w', encoding='utf-8') as f:
        f.write(html)
    return path

